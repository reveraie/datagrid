# Contributing to Reveraie DataGrid

Thank you for considering contributing to Reveraie DataGrid! ðŸŽ‰ Your help is greatly appreciated, whether it's fixing bugs, adding features, improving documentation, or submitting suggestions.

## Table of Contents

- [Code of Conduct](#code-of-conduct)
- [How to Contribute](#how-to-contribute)
- [Getting Started](#getting-started)
- [Code Guidelines](#code-guidelines)
- [Commit Messages](#commit-messages)
- [Pull Request Process](#pull-request-process)
- [Reporting Issues](#reporting-issues)

---

## Code of Conduct

This project follows a [Code of Conduct](CODE_OF_CONDUCT.md) to ensure a welcoming and inclusive environment. Please read it before contributing.

## How to Contribute

1. Fork the repository.
2. Create a new branch (`git checkout -b feature/your-feature`).
3. Make your changes.
4. Commit your changes (`git commit -m 'Add some feature'`).
5. Push to your branch (`git push origin feature/your-feature`).
6. Open a Pull Request.

## Getting Started

### Prerequisites
- Node.js (>= 16.x)
- npm or yarn

### Setup

1. Clone the repository:
   ```bash
   git clone https://github.com/reveraie/datagrid.git
   ```
2. Install dependencies:
   ```bash
   cd datagrid
   npm install
   # or
   yarn install
   ```
3. Run the tests:
   ```bash
   npm test
   # or
   yarn test
   ```
3. Start the demo site:
   ```bash
   npm start
   # or
   yarn start
   ```

## Code Guidelines

- Follow the [Airbnb JavaScript Style Guide](https://github.com/airbnb/javascript).
- Use Prettier for formatting. Run:
  ```bash
  npm run format
  # or
  yarn format
  ```
- Write clear and concise code with comments where necessary.

## Commit Messages

We use [Conventional Commits](https://www.conventionalcommits.org/) for commit messages. Example:

```
feat: add new filtering options to DataGrid
fix: resolve sorting issue in header
chore: update dependencies
```

## Pull Request Process

1. Ensure your changes pass all tests by running:
   ```bash
   npm test
   # or
   yarn test
   ```
2. Add relevant tests for any new features or bug fixes.
3. Update documentation/demo if needed.
4. Submit the PR with a clear description of the changes.
5. Wait for a reviewer to provide feedback.

## Reporting Issues

If you encounter any issues, feel free to open a GitHub issue. Please include:
- A clear description of the problem.
- Steps to reproduce the issue.
- Screenshots or logs, if applicable.

---

Thank you so much for helping make Reveraie DataGrid better! âœ¨

